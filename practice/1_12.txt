1
00:00:00,625 --> 00:00:04,550
在实施backprop时(字幕来源：网易云课堂)
   When you implement back propagation you'll find that there's a test called

2
00:00:04,600 --> 00:00:07,500
有一个测试叫作梯度检验
 creating checking that can really help you make sure

3
00:00:07,550 --> 00:00:10,475
它的作用是确保backprop正确实施
that your implementation of back prop is correct.

4
00:00:10,550 --> 00:00:14,370
因为有时候 你虽然写下了这些方程式 却不能100%确定
Because sometimes you write all these equations and you're just not 100% sure

5
00:00:14,425 --> 00:00:17,625
执行backprop的所有细节都是正确的
 if you've got all the details right and implementing back propagation.

6
00:00:17,800 --> 00:00:20,825
为了逐渐实现梯度检验
 So in order to build up to gradient checking,

7
00:00:20,975 --> 00:00:25,100
我们首先说说如何对计算梯度做数值逼近
 let's first talk about how to numerically approximate computations of gradients,

8
00:00:25,125 --> 00:00:29,150
下节课 我们将讨论如何在backprop中执行梯度检验
 and in the next video, we'll talk about how you can implement gradient checking

9
00:00:29,225 --> 00:00:32,125
以确保backprop正确实施
 to make sure the implementation of backprop is correct.

10
00:00:32,200 --> 00:00:35,725
我们先画出函数f
 So lets take the function f and replot it here,

11
00:00:35,825 --> 00:00:40,750
标记为f(θ)   f(θ)=θ^3
 and remember this is f(θ) equals θ cubed,

12
00:00:40,800 --> 00:00:44,475
先看下θ的值 假设θ=1
 and let's again start off some value of theta, let's say theta equals 1.

13
00:00:44,850 --> 00:00:49,950
不增大θ的值 而是在θ右侧
 Now instead of just nudging theta to the right to get theta plus epsilon,

14
00:00:50,050 --> 00:00:52,375
设置一个θ+ε
 we're going to nudge it to the right and

15
00:00:52,425 --> 00:00:57,600
在θ左侧 设置θ-ε
 nudge it to the left to get theta minus epsilon, as well as θ+ε.

16
00:00:57,875 --> 00:01:02,600
因此θ=1  θ+ε=1.01  θ-ε=0.99
 So this is 1, this is 1.01, this is 0.99 where, again,

17
00:01:02,750 --> 00:01:06,275
跟以前一样 ε的值为0.01
 epsilon is same as before, it is 0.01.

18
00:01:06,400 --> 00:01:10,370
 看下这个小三角形
 It turns out that rather than taking this little triangle and

19
00:01:10,520 --> 00:01:15,550
计算高和宽的比值 就是更准确的坡度预估
 computing the height over the width, you can get a much better estimate of the gradient

20
00:01:15,950 --> 00:01:19,725
选择f函数在θ-ε上的这个点
 if you take this point, f of theta minus epsilon and this point,

21
00:01:19,850 --> 00:01:25,975
用这个较大三角形的高比上宽
and you instead compute the height over width of this bigger triangle.

22
00:01:26,070 --> 00:01:32,700
技术上的原因我就不详细解释了
So for technical reasons which I won't go into, the height over width of this bigger

23
00:01:32,775 --> 00:01:37,600
较大三角形的高宽比值更接近于θ的导数
green triangle gives you a much better approximation to the derivative at theta.

24
00:01:37,700 --> 00:01:41,425
把右上角的三角形下移
And you saw it yourself, taking just this lower triangle in the upper right

25
00:01:41,500 --> 00:01:43,575
好像有了两个三角形
is as if you have two triangles, right?

26
00:01:43,600 --> 00:01:47,050
右上角有一个 左下角有一个
This one on the upper right and this one on the lower left.

27
00:01:47,220 --> 00:01:53,875
我们通过这个绿色大三角形同时考虑了这两个小三角形
 And you're kind of taking both of them into account, by using this bigger green triangle.

28
00:01:54,075 --> 00:01:57,525
所以我们得到的不是一个单边公差而是一个双边公差
 So rather than a one sided difference, you're taking a two sided difference.

29
00:01:57,575 --> 00:01:58,925
我们写一下数据算式
 So let's work out the math.

30
00:01:59,075 --> 00:02:03,175
这点的值是f(θ+ε)
This point here is f(θ+ε).

31
00:02:03,450 --> 00:02:07,500
这点的是f(θ-ε)
This point here is f(θ-ε).

32
00:02:07,650 --> 00:02:14,850
这个三角形的高度是f(θ+ε)-f(θ-ε)
So the height of this big green triangle is f(θ+ε)-f(θ-ε)

33
00:02:15,000 --> 00:02:21,000
这两个宽度都是ε
And then the width, this is 1 epsilon, this is 2 epsilon.

34
00:02:21,125 --> 00:02:24,025
所以三角形的宽度是2ε
So the width of this green triangle is 2ε.

35
00:02:24,250 --> 00:02:27,800
高宽比值为
So the height of the width is going to be first the height,

36
00:02:28,125 --> 00:02:34,950
 f(θ+ε)-f(θ-ε) 除以宽度
so that's f(θ+ε)-f(θ-ε) divided by the width.

37
00:02:35,110 --> 00:02:38,125
宽度为2ε 结果为(f(θ+ε)-f(θ-ε))/(2ε )
So that was 2ε which we write that down here.

38
00:02:38,450 --> 00:02:43,250
它的期望值接近g(θ)
And this should hopefully be close to g(θ).

39
00:02:43,375 --> 00:02:46,250
传入参数值 f(θ)=θ^3
So plug in the values, remember f(θ) is theta cubed.

40
00:02:46,350 --> 00:02:49,575
θ+ε=1.01
So this is theta plus epsilon is 1.01.

41
00:02:49,890 --> 00:02:58,600
(1.01)^3-(0.99)^3/2(0.01)
So I take a cube of that minus 0.99 take a cube of that, divided by 2 times 0.01.

42
00:02:58,875 --> 00:03:02,050
大家可以暂停视频 用计算器算算结果
Feel free to pause the video and practice this in the calculator.

43
00:03:02,150 --> 00:03:06,100
 结果应该是3.0001
 You should get that this is 3.0001.

44
00:03:06,259 --> 00:03:10,581
而前一张幻灯片上面是
 Whereas from the previous slide, we saw that g(θ),

45
00:03:10,670 --> 00:03:13,950
当θ=1时 g(θ)=3
 this was 3 theta squared, so when theta was 1, this is 3,  g(θ)=3 θ2

46
00:03:14,025 --> 00:03:17,050
所以这两个g(θ)值非常接近
 so these two values are actually very close to each other.

47
00:03:17,150 --> 00:03:22,575
逼近误差为0.0001
 The approximation error is now 0.0001.

48
00:03:22,700 --> 00:03:24,275
前一张幻灯片
 Whereas on the previous slide,

49
00:03:24,375 --> 00:03:28,100
我们只考虑了单边公差  即从θ到θ+ε之间的误差
 we've taken the one sided of difference, just theta and theta plus epsilon,

50
00:03:28,250 --> 00:03:32,825
g(θ)的值为3.0301
 we had gotten 3.0301

51
00:03:33,025 --> 00:03:40,340
逼近误差是0.03 不是0.0001
 and so the approximation error was 0.03, rather than 0.0001.

52
00:03:40,900 --> 00:03:45,700
所以使用双边误差的方法更逼近导数
 So with this two sided difference way of approximating the derivative

53
00:03:45,775 --> 00:03:48,250
其结果接近于3
 you find that this is extremely close to 3.

54
00:03:48,325 --> 00:03:52,775
现在我们更加确信
 And so this gives you a much greater confidence that g(θ) is

55
00:03:52,900 --> 00:03:57,350
g(θ)可能是一个f导数的正确实现
 probably a correct implementation of the derivative of f.

56
00:03:57,925 --> 00:04:01,480
在梯度检验和反向传播中使用该方法时
 When you use this method for gradient checking and back propagation,

57
00:04:01,480 --> 00:04:06,075
最终 它与运行两次单边公差的速度一样
 this turns out to run twice as slow as you were to use a one-sided difference.

58
00:04:06,070 --> 00:04:09,700
实际上 我认为这种方法还是非常值得使用的
 It turns out that, in practice, I think it's worth it to use this other method,

59
00:04:09,875 --> 00:04:11,350
因为它的结果更准确
because it's just much more accurate.

60
00:04:11,420 --> 00:04:17,375
这是一些你可能比较熟悉的微积分的理论
The little bit of optional theory for those of you that are a little bit more familiar of Calculus,

61
00:04:17,450 --> 00:04:21,950
如果你不太明白我讲的这些理论也没关系
it turns out that, and it's okay if you don't get what I'm about to say here.

62
00:04:22,170 --> 00:04:28,250
导数的官方定义是针对值很小的ε
But it turns out that the formal definition of a derivative is for very small values of epsilon

63
00:04:28,375 --> 00:04:34,150
 f(θ+ε)-f(θ-ε) / 2ε
is  f(θ+ε)-f(θ-ε) / 2ε.

64
00:04:34,250 --> 00:04:37,775
导数的官方定义是右边公式的极限
And the formal definition of derivative is in the limits of exactly

65
00:04:37,850 --> 00:04:42,480
ε趋近于0
that formula on the right, as epsilon goes as 0.

66
00:04:42,500 --> 00:04:47,150
如果你上过微积分课 应该学过无穷尽的定义
And the definition of unlimited is something that you learned if you took a Calculus class,

67
00:04:47,250 --> 00:04:48,700
我就不在这里讲了
but I won't go into that here.

68
00:04:48,825 --> 00:04:52,575
对于一个非零的ε
And it turns out that for a non zero value of epsilon,

69
00:04:52,675 --> 00:04:58,400
它的逼近误差可以写成О(ε2)
you can show that the error of this approximation is on the order of epsilon squared,

70
00:04:58,500 --> 00:05:00,750
ε值非常小
and remember epsilon is a very small number.

71
00:05:00,900 --> 00:05:04,775
如果ε=0.01
So if epsilon is 0.01, which it is here,

72
00:05:04,850 --> 00:05:08,250
 ε2=0.0001
then epsilon squared is 0.0001.

73
00:05:08,400 --> 00:05:12,225
大写符号O的含义是指逼近误差其实是一些常量乘以ε2
The big O notation means the error is actually some constant times this,

74
00:05:12,375 --> 00:05:14,950
但它的确是很准确的逼近误差
 but this is actually exactly our approximation error.

75
00:05:15,050 --> 00:05:17,450
所以大写O的常量有时是1
 So the big O constant happens to be 1.

76
00:05:17,625 --> 00:05:21,925
然而 如果我们用另外一个公式
 Whereas in contrast, if we were to use this formula, the other one,

77
00:05:22,000 --> 00:05:25,120
逼近误差就是О(ε)
then the error is on the order of epsilon.

78
00:05:25,150 --> 00:05:29,870
当ε小于1时 实际上ε比ε2大很多
And again, when epsilon is a number less than 1, then epsilon is actually

79
00:05:29,920 --> 00:05:34,350
所以这个公式
much bigger than epsilon squared, which is why this formula here is actually

80
00:05:34,450 --> 00:05:38,825
近似值远没有左边公式的准确
much less accurate approximation than this formula on the left;

81
00:05:38,920 --> 00:05:40,750
所以在执行梯度检验时
which is why when doing gradient checking,

82
00:05:40,820 --> 00:05:49,350
我们使用双边误差 即(f(θ+ε)-f(θ-ε))/(2ε )
we rather use this two-sided difference when you compute f(θ+ε)-f(θ-ε) and then divide by 2ε,

83
00:05:49,500 --> 00:05:53,270
而不使用单边公差 因为它不够准确
rather than just one sided difference which is less accurate.

84
00:05:53,725 --> 00:05:57,025
如果你不理解上面两条结论 所有公式都在这儿
 If you didn't understand my last two comments, all of these things are on here,

85
00:05:57,090 --> 00:05:58,125
不用担心
 don't worry about it.

86
00:05:58,225 --> 00:06:02,200
如果你对微积分和数值逼近有所了解
 That's really more for those of you that are a bit more familiar with Calculus,

87
00:06:02,300 --> 00:06:04,125
这些信息已经足够多了
 and with numerical approximations.

88
00:06:04,475 --> 00:06:08,850
重点是要记住 双边误差公式的结果更准确
But the takeaway is that this two-sided difference formula is much more accurate.

89
00:06:08,875 --> 00:06:12,725
下节课我们做梯度检验时就会用到这个方法
And so that's what we're gonna use when we do gradient checking in the next video.

90
00:06:13,475 --> 00:06:16,275
今天我们讲了如何使用双边误差
 So you've seen how by taking a two sided difference,

91
00:06:16,350 --> 00:06:21,550
来判断别人给你的函数g(θ)
 you can numerically verify whether or not a function g, g(θ) that someone else gives you

92
00:06:21,625 --> 00:06:25,250
是否正确实现了函数f的偏导
is a correct implementation of the derivative of a function f.

93
00:06:25,420 --> 00:06:28,500
现在我们可以使用这个方法来检验
 Let's now see how we can use this to verify whether or not

94
00:06:28,600 --> 00:06:31,575
反向传播是否得以正确实施
 your back propagation implementation is correct or

95
00:06:31,650 --> 00:06:35,000
如果不正确  它可能有bug需要你来解决
you know, there might be a bug in there that you need to go in and tease out.

